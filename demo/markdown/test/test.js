import {md} from "../markdown.js";

let errs=0;
function sanitize(str){
	return str.replace(/\n/g,"\\n").replace(/\t/g,"\\t");
}
function test(result,expect){
	if(expect===result){
		console.log(`ok: ${sanitize(expect)}`);
	}
	else {
		errs++;
		result = (result) ? sanitize(result) : "false";
		expect = sanitize(expect);
		console.log(`error: expected ${expect} / got ${result}`);
	}	
}
console.log("Begin test");

// paragraph
test(md("abc"),'<p>abc</p>\n');
test(md("abc\n"),'<p>abc</p>\n');
test(md("a`b`c"),'<p>a<code>b</code>c</p>\n');
test(md("a*b*c"),'<p>a<i>b</i>c</p>\n');
test(md("a**b**c"),'<p>a<b>b</b>c</p>\n');
test(md("a~~b~~c"),'<p>a<s>b</s>c</p>\n');
test(md("[google](www.google.com)"),'<p><a href="www.google.com">google</a></p>\n');

test(md("**abc**"),'<p><b>abc</b></p>\n');
test(md("**`abc`**"),'<p><b><code>abc</code></b></p>\n');
//test(md("**a*b*c**"),"<b>a<i>b</i>c</b>"); // WRONG

test(md("**a_b_c**"),'<p><b>a<i>b</i>c</b></p>\n');
test(md("**a~~b~~c**"),'<p><b>a<s>b</s>c</b></p>\n');
test(md("**a**b**c**"),'<p><b>a</b>b<b>c</b></p>\n');
test(md("**a__b__c**"),'<p><b>a<b>b</b>c</b></p>\n');
test(md("**abc*"),'<p>*<i>abc</i></p>\n');
test(md("**abc"),'<p>**abc</p>\n');
test(md("**[google](www.google.com)**"),'<p><b><a href="www.google.com">google</a></b></p>\n');

test(md("__abc__"),'<p><b>abc</b></p>\n');
test(md("__`abc`_"),'<p>_<i><code>abc</code></i></p>\n');
test(md("__a*b*c__"),'<p><b>a<i>b</i>c</b></p>\n');
//test(md("__a_b_c__"),"<p><b>a<i>b</i>c</b></p>\n"); // WRONG
//test(md("__a**b**c__"),"<p><b>a*<i>b</i>*c</b></p>\n");
//test(md("__a__b__c__"),'<p><b>a<b>b</b>c</b></p>\n');
test(md("__abc__"),'<p><b>abc</b></p>\n');
test(md("__abc"),'<p>__abc</p>\n');
test(md("__[google](www.google.com)__"),'<p><b><a href="www.google.com">google</a></b></p>\n');

test(md("*abc*"),'<p><i>abc</i></p>\n');
test(md("*`abc`*"),'<p><i><code>abc</code></i></p>\n');
test(md("*a**b**c*"),'<p><i>a<b>b</b>c</i></p>\n');
test(md("*a__b__c*"),'<p><i>a<b>b</b>c</i></p>\n');
test(md("*a~~b~~c*"),'<p><i>a<s>b</s>c</i></p>\n');
test(md("*a*b*c*"),'<p><i>a</i>b<i>c</i></p>\n');
test(md("*a_b_c*"),'<p><i>a<i>b</i>c</i></p>\n');
test(md("*abc**"),'<p><i>abc</i>*</p>\n');
test(md("*abc"),'<p>*abc</p>\n');
test(md("*[google](www.google.com)*"),'<p><i><a href="www.google.com">google</a></i></p>\n');

test(md("_abc_"),'<p><i>abc</i></p>\n');
test(md("_`abc`_"),'<p><i><code>abc</code></i></p>\n');
test(md("_a**b**c_"),'<p><i>a<b>b</b>c</i></p>\n');
test(md("_a__b__c_"),'<p><i>a<b>b</b>c</i></p>\n');
test(md("_a~~b~~c_"),'<p><i>a<s>b</s>c</i></p>\n');
test(md("_a*b*c_"),'<p><i>a<i>b</i>c</i></p>\n');
test(md("_a_b_c_"),'<p><i>a</i>b<i>c</i></p>\n');
test(md("_abc__"),'<p><i>abc</i>_</p>\n');
test(md("_[google](www.google.com)_"),'<p><i><a href="www.google.com">google</a></i></p>\n');

test(md("~~abc~~"),'<p><s>abc</s></p>\n');
test(md("~~`abc`~~"),'<p><s><code>abc</code></s></p>\n');
test(md("~~a**b**c~~"),'<p><s>a<b>b</b>c</s></p>\n');
test(md("~~a__b__c~~"),'<p><s>a<b>b</b>c</s></p>\n');
test(md("~~a*b*c~~"),'<p><s>a<i>b</i>c</s></p>\n');
test(md("~~a_b_c~~"),'<p><s>a<i>b</i>c</s></p>\n');
test(md("~~a~~b~~c~~"),'<p><s>a</s>b<s>c</s></p>\n');
test(md("~~[google](www.google.com)~~"),'<p><s><a href="www.google.com">google</a></s></p>\n');

test(md("`abc`"),'<p><code>abc</code></p>\n');
test(md("`**abc**`"),'<p><code>**abc**</code></p>\n');
test(md("`__abc__`"),'<p><code>__abc__</code></p>\n');
test(md("`*abc*`"),'<p><code>*abc*</code></p>\n');
test(md("`_abc_`"),'<p><code>_abc_</code></p>\n');
test(md("`~~abc~~`"),'<p><code>~~abc~~</code></p>\n');
test(md("`a`b`c`"),'<p><code>a</code>b<code>c</code></p>\n');
test(md("`[google](www.google.com)`"),'<p><code>[google](www.google.com)</code></p>\n');

test(md('---\n'),'<hr>\n');
test(md('***\n'),'<hr>\n');
test(md('___\n'),'<hr>\n');
test(md('****\n'),'<hr>\n');
test(md('**\n'),"<p>**</p>\n");

test(md("[google](www.google.com)"),'<p><a href="www.google.com">google</a></p>\n');
test(md("[google](./localfile.txt)"),'<p><a href="./localfile.txt">google</a></p>\n');
test(md('[google](www.google.com "tip")'),'<p><a href="www.google.com" title="tip">google</a></p>\n');
test(md('[google](www.google.com"tip")'),'<p><a href="www.google.com" title="tip">google</a></p>\n');
test(md('[google](www.google.com     "tip")'),'<p><a href="www.google.com" title="tip">google</a></p>\n');

test(md('![google](www.google.com)'),'<p><img alt="google" src="www.google.com"></p>\n');
test(md('![google](www.google.com "some text")'),'<p><img alt="google" src="www.google.com" title="some text"></p>\n');

//setlink( {goog:{link:"www.google.com"}} );
//test(read("[google][goog]"),'<a href="www.google.com">google</a>');

//setlink( {goog:{link:"www.google.com",title:"some text"}} );
//test(read("[google][goog]"),'<a href="www.google.com" title="some text">google</a>');

//setlink( {} );
//test(read("[google][goog]"),'<a>google</a>');
//test(read(ref,`[goog]: www.google.com`),"goog");
//test(read("[google][goog]"),'<a href="www.google.com">google</a>');

//test(read(ref,`[goog]: www.google.com "some text"`),"goog");
//test(read("[google][goog]"),'<a href="www.google.com" title="some text">google</a>');

//test(read(ref,`[1]: www.google.com "some text"`),"1");
//test(read("[google][1]"),'<a href="www.google.com" title="some text">google</a>');

// line structures
test(md(">abc"),"<blockquote>abc</blockquote>\n");
test(md("> abc"),"<blockquote>abc</blockquote>\n");
test(md(">[google](www.google.com)"),'<blockquote><a href="www.google.com">google</a></blockquote>\n');

test(md("\tabc"),"<pre><code>abc</code></pre>\n");
test(md("    abc"),"<pre><code>abc</code></pre>\n");
test(md("\t\tabc"),"<pre><code>\tabc</code></pre>\n");
test(md("\t\t\tabc"),"<pre><code>\t\tabc</code></pre>\n");
test(md("     abc"),"<pre><code> abc</code></pre>\n");
test(md("        abc"),"<pre><code>    abc</code></pre>\n");
test(md("\tabc\n\tdef"),"<pre><code>abc\ndef</code></pre>\n");
test(md("\t[google](www.google.com)"),"<pre><code>[google](www.google.com)</code></pre>\n");

test(md("````\nabc\n````"),"<pre><code>abc\n</code></pre>\n");
test(md("````\nabc\ndef\n````"),"<pre><code>abc\ndef\n</code></pre>\n");

test(md("# abc"),"<h1>abc</h1>\n");
test(md("## abc"),"<h2>abc</h2>\n");
test(md("### abc"),"<h3>abc</h3>\n");
test(md("#### abc"),"<h4>abc</h4>\n");
test(md("##### abc"),"<h5>abc</h5>\n");
test(md("###### abc"),"<h6>abc</h6>\n");
test(md("####### abc"),"<p>####### abc</p>\n");
test(md("#     abc"),"<h1>abc</h1>\n");

test(md("# **abc**"),"<h1><b>abc</b></h1>\n");
test(md("# __abc__"),"<h1><b>abc</b></h1>\n");
test(md("# *abc*"),"<h1><i>abc</i></h1>\n");
test(md("# _abc_"),"<h1><i>abc</i></h1>\n");
test(md("# ~~abc~~"),"<h1><s>abc</s></h1>\n");

test(md("abc\n===\n"),"<h1>abc</h1>\n");
test(md("abc\n---\n"),"<h2>abc</h2>\n");

test(md("- abc"),"<ul>\n<li>abc</li>\n</ul>\n");
test(md("- abc\n- def"),"<ul>\n<li>abc</li>\n<li>def</li>\n</ul>\n");
test(md("1. abc"),"<ol>\n<li>abc</li>\n</ol>\n");
test(md("1. abc\n2. def"),"<ol>\n<li>abc</li>\n<li>def</li>\n</ol>\n");
test(md("1. abc\n22345. def"),"<ol>\n<li>abc</li>\n<li>def</li>\n</ol>\n");

test(md("| A | B |\n| --- | --- |\n| one | two |"),
	'<table>\n<tr>\n<th>A</th>\n<th>B</th>\n</tr>\n<tr>\n<td>one</td>\n<td>two</td>\n</tr>\n</table>\n');

test(md("| A | B |\n| ---:|:---:|\n| one | two |"),
	'<table>\n<tr>\n<th class="right">A</th>\n<th class="center">B</th>\n</tr>\n<tr>\n<td class="right">one</td>\n<td class="center">two</td>\n</tr>\n</table>\n');

//test(md("A | B\n--- | ---\none | two"),
//	'<table>\n<tr>\n<th>A</th>\n<th>B</th>\n</tr>\n<tr>\n<td>one</td>\n<td>two</td>\n</tr>\n</table>\n');

// ensure that whole document can be read (multi statement)
test(md('abc\ndef'),'<p>abc</p>\n<p>def</p>\n');
console.log('========================')

// common mark unit tests
// ref: https://spec.commonmark.org/0.29/spec.json

test(md('\tfoo\tbaz\t\tbim\n'),'<pre><code>foo\tbaz\t\tbim\n</code></pre>\n');
test(md('  \tfoo\tbaz\t\tbim\n'),'<pre><code>foo\tbaz\t\tbim\n</code></pre>\n');
test(md('    a\ta\n    ὐ\ta\n'),'<pre><code>a\ta\nὐ\ta\n</code></pre>\n');
//test(md('  - foo\n\n\tbar\n'),'<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>\n');
//test(md('- foo\n\n\t\tbar\n'),'<ul>\n<li>\n<p>foo</p>\n<pre><code>  bar\n</code></pre>\n</li>\n</ul>\n');
//test(md('>\t\tfoo\n'),'<blockquote>\n<pre><code>  foo\n</code></pre>\n</blockquote>\n');
//test(md('-\t\tfoo\n'),'<ul>\n<li>\n<pre><code>  foo\n</code></pre>\n</li>\n</ul>\n');
test(md('    foo\n\tbar\n'),'<pre><code>foo\nbar\n</code></pre>\n');
//test(md(' - foo\n   - bar\n\t - baz\n'),'<ul>\n<li>foo\n<ul>\n<li>bar\n<ul>\n<li>baz</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n');
//test(md('#\tFoo\n'),'<h1>Foo</h1>\n');
//test(md('*\t*\t*\t\n'),'<hr />\n');
//test(md('- `one\n- two`\n'),'<ul>\n<li>`one</li>\n<li>two`</li>\n</ul>\n');
//test(md('***\n---\n___\n'),'<hr />\n<hr />\n<hr />\n');
test(md('+++\n'),'<p>+++</p>\n');
test(md('===\n'),'<p>===</p>\n');
//test(md('--\n**\n__\n'),'<p>--\n**\n__</p>\n');
//test(md(' ***\n  ***\n   ***\n'),'<hr />\n<hr />\n<hr />\n');
test(md('    ***\n'),'<pre><code>***\n</code></pre>\n');
//test(md('Foo\n    ***\n'),'<p>Foo\n***</p>\n');
//test(md('_____________________________________\n'),'<hr />\n');
//test(md(' - - -\n'),'<hr />\n');
//test(md(' **  * ** * ** * **\n'),'<hr />\n');
//test(md('-     -      -      -\n'),'<hr />\n');
//test(md('- - - -    \n'),'<hr />\n');
//test(md('_ _ _ _ a\n\na------\n\n---a---\n'),'<p>_ _ _ _ a</p>\n<p>a------</p>\n<p>---a---</p>\n');
//test(md(' *-*\n'),'<p><em>-</em></p>\n');
//test(md('- foo\n***\n- bar\n'),'<ul>\n<li>foo</li>\n</ul>\n<hr />\n<ul>\n<li>bar</li>\n</ul>\n');
//test(md('Foo\n***\nbar\n'),'<p>Foo</p>\n<hr />\n<p>bar</p>\n');
test(md('Foo\n---\nbar\n'),'<h2>Foo</h2>\n<p>bar</p>\n');
//test(md('* Foo\n* * *\n* Bar\n'),'<ul>\n<li>Foo</li>\n</ul>\n<hr />\n<ul>\n<li>Bar</li>\n</ul>\n');
//test(md('- Foo\n- * * *\n'),'<ul>\n<li>Foo</li>\n<li>\n<hr />\n</li>\n</ul>\n');
test(md('# foo\n## foo\n### foo\n#### foo\n##### foo\n###### foo\n'),'<h1>foo</h1>\n<h2>foo</h2>\n<h3>foo</h3>\n<h4>foo</h4>\n<h5>foo</h5>\n<h6>foo</h6>\n');
test(md('####### foo\n'),'<p>####### foo</p>\n');
test(md('#5 bolt\n\n#hashtag\n'),'<p>#5 bolt</p>\n<p>#hashtag</p>\n');
//test(md('\\## foo\n'),'<p>## foo</p>\n');
//test(md('# foo *bar* \\*baz\\*\n'),'<h1>foo <em>bar</em> *baz*</h1>\n');
//test(md('#                  foo                     \n'),'<h1>foo</h1>\n');
//test(md(' ### foo\n  ## foo\n   # foo\n'),'<h3>foo</h3>\n<h2>foo</h2>\n<h1>foo</h1>\n');
test(md('    # foo\n'),'<pre><code># foo\n</code></pre>\n');
//test(md('foo\n    # bar\n'),'<p>foo\n# bar</p>\n');
//test(md('## foo ##\n  ###   bar    ###\n'),'<h2>foo</h2>\n<h3>bar</h3>\n');
//test(md('# foo ##################################\n##### foo ##\n'),'<h1>foo</h1>\n<h5>foo</h5>\n');
//test(md('### foo ###     \n'),'<h3>foo</h3>\n');
test(md('### foo ### b\n'),'<h3>foo ### b</h3>\n');
test(md('# foo#\n'),'<h1>foo#</h1>\n');
//test(md('### foo \\###\n## foo #\\##\n# foo \\#\n'),'<h3>foo ###</h3>\n<h2>foo ###</h2>\n<h1>foo #</h1>\n');
//test(md('****\n## foo\n****\n'),'<hr />\n<h2>foo</h2>\n<hr />\n');
test(md('Foo bar\n# baz\nBar foo\n'),'<p>Foo bar</p>\n<h1>baz</h1>\n<p>Bar foo</p>\n');
//test(md('## \n#\n### ###\n'),'<h2></h2>\n<h1></h1>\n<h3></h3>\n');
//test(md('Foo *bar*\n=========\n\nFoo *bar*\n---------\n'),'<h1>Foo <em>bar</em></h1>\n<h2>Foo <em>bar</em></h2>\n');
//test(md('Foo *bar\nbaz*\n====\n'),'<h1>Foo <em>bar\nbaz</em></h1>\n');
//test(md('  Foo *bar\nbaz*\t\n====\n'),'<h1>Foo <em>bar\nbaz</em></h1>\n');
//test(md('Foo\n-------------------------\n\nFoo\n=\n'),'<h2>Foo</h2>\n<h1>Foo</h1>\n');
//test(md('   Foo\n---\n\n  Foo\n-----\n\n  Foo\n  ===\n'),'<h2>Foo</h2>\n<h2>Foo</h2>\n<h1>Foo</h1>\n');
//test(md('    Foo\n    ---\n\n    Foo\n---\n'),'<pre><code>Foo\n---\n\nFoo\n</code></pre>\n<hr />\n');
//test(md('Foo\n   ----      \n'),'<h2>Foo</h2>\n');
//test(md('Foo\n    ---\n'),'<p>Foo\n---</p>\n');
//test(md('Foo\n= =\n\nFoo\n--- -\n'),'<p>Foo\n= =</p>\n<p>Foo</p>\n<hr />\n');
//test(md('Foo  \n-----\n'),'<h2>Foo</h2>\n');
test(md('Foo\\\n----\n'),'<h2>Foo\\</h2>\n');
//test(md('`Foo\n----\n`\n\n<a title=\"a lot\n---\nof dashes\"/>\n'),'<h2>`Foo</h2>\n<p>`</p>\n<h2>&lt;a title=&quot;a lot</h2>\n<p>of dashes&quot;/&gt;</p>\n');
//test(md('> Foo\n---\n'),'<blockquote>\n<p>Foo</p>\n</blockquote>\n<hr />\n');
//test(md('> foo\nbar\n===\n'),'<blockquote>\n<p>foo\nbar\n===</p>\n</blockquote>\n');
//test(md('- Foo\n---\n'),'<ul>\n<li>Foo</li>\n</ul>\n<hr />\n');
//test(md('Foo\nBar\n---\n'),'<h2>Foo\nBar</h2>\n');
//test(md('---\nFoo\n---\nBar\n---\nBaz\n'),'<hr />\n<h2>Foo</h2>\n<h2>Bar</h2>\n<p>Baz</p>\n');
//test(md('\n====\n'),'<p>====</p>\n');
//test(md('---\n---\n'),'<hr />\n<hr />\n');
//test(md('- foo\n-----\n'),'<ul>\n<li>foo</li>\n</ul>\n<hr />\n');
//test(md('    foo\n---\n'),'<pre><code>foo\n</code></pre>\n<hr />\n');
//test(md('> foo\n-----\n'),'<blockquote>\n<p>foo</p>\n</blockquote>\n<hr />\n');
//test(md('\\> foo\n------\n'),'<h2>&gt; foo</h2>\n');
test(md('Foo\n\nbar\n---\nbaz\n'),'<p>Foo</p>\n<h2>bar</h2>\n<p>baz</p>\n');
//test(md('Foo\nbar\n\n---\n\nbaz\n'),'<p>Foo\nbar</p>\n<hr />\n<p>baz</p>\n');
//test(md('Foo\nbar\n* * *\nbaz\n'),'<p>Foo\nbar</p>\n<hr />\n<p>baz</p>\n');
//test(md('Foo\nbar\n\\---\nbaz\n'),'<p>Foo\nbar\n---\nbaz</p>\n');
test(md('    a simple\n      indented code block\n'),'<pre><code>a simple\n  indented code block\n</code></pre>\n');
//test(md('  - foo\n\n    bar\n'),'<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>\n');
//test(md('1.  foo\n\n    - bar\n'),'<ol>\n<li>\n<p>foo</p>\n<ul>\n<li>bar</li>\n</ul>\n</li>\n</ol>\n');
//test(md('    <a/>\n    *hi*\n\n    - one\n'),'<pre><code>&lt;a/&gt;\n*hi*\n\n- one\n</code></pre>\n');
//test(md('    chunk1\n\n    chunk2\n  \n \n \n    chunk3\n'),'<pre><code>chunk1\n\nchunk2\n\n\n\nchunk3\n</code></pre>\n');
test(md('    chunk1\n      \n      chunk2\n'),'<pre><code>chunk1\n  \n  chunk2\n</code></pre>\n');
//test(md('Foo\n    bar\n\n'),'<p>Foo\nbar</p>\n');
test(md('    foo\nbar\n'),'<pre><code>foo\n</code></pre>\n<p>bar</p>\n');
//test(md('# Heading\n    foo\nHeading\n------\n    foo\n----\n'),'<h1>Heading</h1>\n<pre><code>foo\n</code></pre>\n<h2>Heading</h2>\n<pre><code>foo\n</code></pre>\n<hr />\n');
test(md('        foo\n    bar\n'),'<pre><code>    foo\nbar\n</code></pre>\n');
//test(md('\n    \n    foo\n    \n\n'),'<pre><code>foo\n</code></pre>\n');
test(md('    foo  \n'),'<pre><code>foo  \n</code></pre>\n');
//test(md('```\n<\n >\n```\n'),'<pre><code>&lt;\n &gt;\n</code></pre>\n');
//test(md('~~~\n<\n >\n~~~\n'),'<pre><code>&lt;\n &gt;\n</code></pre>\n');
//test(md('``\nfoo\n``\n'),'<p><code>foo</code></p>\n');
//test(md('```\naaa\n~~~\n```\n'),'<pre><code>aaa\n~~~\n</code></pre>\n');
//test(md('~~~\naaa\n```\n~~~\n'),'<pre><code>aaa\n```\n</code></pre>\n');
//test(md('````\naaa\n```\n``````\n'),'<pre><code>aaa\n```\n</code></pre>\n');
//test(md('~~~~\naaa\n~~~\n~~~~\n'),'<pre><code>aaa\n~~~\n</code></pre>\n');
//test(md('```\n'),'<pre><code></code></pre>\n');
//test(md('`````\n\n```\naaa\n'),'<pre><code>\n```\naaa\n</code></pre>\n');
//test(md('> ```\n> aaa\n\nbbb\n'),'<blockquote>\n<pre><code>aaa\n</code></pre>\n</blockquote>\n<p>bbb</p>\n');
//test(md('```\n\n  \n```\n'),'<pre><code>\n  \n</code></pre>\n');
//test(md('```\n```\n'),'<pre><code></code></pre>\n');
//test(md(' ```\n aaa\naaa\n```\n'),'<pre><code>aaa\naaa\n</code></pre>\n');
//test(md('  ```\naaa\n  aaa\naaa\n  ```\n'),'<pre><code>aaa\naaa\naaa\n</code></pre>\n');
//test(md('   ```\n   aaa\n    aaa\n  aaa\n   ```\n'),'<pre><code>aaa\n aaa\naaa\n</code></pre>\n');
test(md('    ```\n    aaa\n    ```\n'),'<pre><code>```\naaa\n```\n</code></pre>\n');
//test(md('```\naaa\n  ```\n'),'<pre><code>aaa\n</code></pre>\n');
//test(md('   ```\naaa\n  ```\n'),'<pre><code>aaa\n</code></pre>\n');
//test(md('```\naaa\n    ```\n'),'<pre><code>aaa\n    ```\n</code></pre>\n');
//test(md('``` ```\naaa\n'),'<p><code> </code>\naaa</p>\n');
//test(md('~~~~~~\naaa\n~~~ ~~\n'),'<pre><code>aaa\n~~~ ~~\n</code></pre>\n');
//test(md('foo\n```\nbar\n```\nbaz\n'),'<p>foo</p>\n<pre><code>bar\n</code></pre>\n<p>baz</p>\n');
//test(md('foo\n---\n~~~\nbar\n~~~\n# baz\n'),'<h2>foo</h2>\n<pre><code>bar\n</code></pre>\n<h1>baz</h1>\n');
//test(md('```ruby\ndef foo(x)\n  return 3\nend\n```\n'),'<pre><code class=\"language-ruby\">def foo(x)\n  return 3\nend\n</code></pre>\n');
//test(md('~~~~    ruby startline=3 $%@#$\ndef foo(x)\n  return 3\nend\n~~~~~~~\n'),'<pre><code class=\"language-ruby\">def foo(x)\n  return 3\nend\n</code></pre>\n');
//test(md('````;\n````\n'),'<pre><code class=\"language-;\"></code></pre>\n');
//test(md('``` aa ```\nfoo\n'),'<p><code>aa</code>\nfoo</p>\n');
//test(md('~~~ aa ``` ~~~\nfoo\n~~~\n'),'<pre><code class=\"language-aa\">foo\n</code></pre>\n');
//test(md('```\n``` aaa\n```\n'),'<pre><code>``` aaa\n</code></pre>\n');
//test(md('<table><tr><td>\n<pre>\n**Hello**,\n\n_world_.\n</pre>\n</td></tr></table>\n'),'<table><tr><td>\n<pre>\n**Hello**,\n<p><em>world</em>.\n</pre></p>\n</td></tr></table>\n');
//test(md('<table>\n  <tr>\n    <td>\n           hi\n    </td>\n  </tr>\n</table>\n\nokay.\n'),'<table>\n  <tr>\n    <td>\n           hi\n    </td>\n  </tr>\n</table>\n<p>okay.</p>\n');
//test(md(' <div>\n  *hello*\n         <foo><a>\n'),' <div>\n  *hello*\n         <foo><a>\n');
//test(md('</div>\n*foo*\n'),'</div>\n*foo*\n');
//test(md('<DIV CLASS=\"foo\">\n\n*Markdown*\n\n</DIV>\n'),'<DIV CLASS=\"foo\">\n<p><em>Markdown</em></p>\n</DIV>\n');
//test(md('<div id=\"foo\"\n  class=\"bar\">\n</div>\n'),'<div id=\"foo\"\n  class=\"bar\">\n</div>\n');
//test(md('<div id=\"foo\" class=\"bar\n  baz\">\n</div>\n'),'<div id=\"foo\" class=\"bar\n  baz\">\n</div>\n');
//test(md('<div>\n*foo*\n\n*bar*\n'),'<div>\n*foo*\n<p><em>bar</em></p>\n');
//test(md('<div id=\"foo\"\n*hi*\n'),'<div id=\"foo\"\n*hi*\n');
//test(md('<div class\nfoo\n'),'<div class\nfoo\n');
//test(md('<div *???-&&&-<---\n*foo*\n'),'<div *???-&&&-<---\n*foo*\n');
//test(md('<div><a href=\"bar\">*foo*</a></div>\n'),'<div><a href=\"bar\">*foo*</a></div>\n');
//test(md('<table><tr><td>\nfoo\n</td></tr></table>\n'),'<table><tr><td>\nfoo\n</td></tr></table>\n');
//test(md('<div></div>\n``` c\nint x = 33;\n```\n'),'<div></div>\n``` c\nint x = 33;\n```\n');
//test(md('<a href=\"foo\">\n*bar*\n</a>\n'),'<a href=\"foo\">\n*bar*\n</a>\n');
//test(md('<Warning>\n*bar*\n</Warning>\n'),'<Warning>\n*bar*\n</Warning>\n');
//test(md('<i class=\"foo\">\n*bar*\n</i>\n'),'<i class=\"foo\">\n*bar*\n</i>\n');
//test(md('</ins>\n*bar*\n'),'</ins>\n*bar*\n');
//test(md('<del>\n*foo*\n</del>\n'),'<del>\n*foo*\n</del>\n');
//test(md('<del>\n\n*foo*\n\n</del>\n'),'<del>\n<p><em>foo</em></p>\n</del>\n');
//test(md('<del>*foo*</del>\n'),'<p><del><em>foo</em></del></p>\n');
//test(md('<pre language=\"haskell\"><code>\nimport Text.HTML.TagSoup\n\nmain :: IO ()\nmain = print $ parseTags tags\n</code></pre>\nokay\n'),'<pre language=\"haskell\"><code>\nimport Text.HTML.TagSoup\n\nmain :: IO ()\nmain = print $ parseTags tags\n</code></pre>\n<p>okay</p>\n');
//test(md('<script type=\"text/javascript\">\n// JavaScript example\n\ndocument.getElementById(\"demo\").innerHTML = \"Hello JavaScript!\";\n</script>\nokay\n'),'<script type=\"text/javascript\">\n// JavaScript example\n\ndocument.getElementById(\"demo\").innerHTML = \"Hello JavaScript!\";\n</script>\n<p>okay</p>\n');
//test(md('<style\n  type=\"text/css\">\nh1 {color:red;}\n\np {color:blue;}\n</style>\nokay\n'),'<style\n  type=\"text/css\">\nh1 {color:red;}\n\np {color:blue;}\n</style>\n<p>okay</p>\n');
//test(md('<style\n  type=\"text/css\">\n\nfoo\n'),'<style\n  type=\"text/css\">\n\nfoo\n');
//test(md('> <div>\n> foo\n\nbar\n'),'<blockquote>\n<div>\nfoo\n</blockquote>\n<p>bar</p>\n');
//test(md('- <div>\n- foo\n'),'<ul>\n<li>\n<div>\n</li>\n<li>foo</li>\n</ul>\n');
//test(md('<style>p{color:red;}</style>\n*foo*\n'),'<style>p{color:red;}</style>\n<p><em>foo</em></p>\n');
//test(md('<!-- foo -->*bar*\n*baz*\n'),'<!-- foo -->*bar*\n<p><em>baz</em></p>\n');
//test(md('<script>\nfoo\n</script>1. *bar*\n'),'<script>\nfoo\n</script>1. *bar*\n');
//test(md('<!-- Foo\n\nbar\n   baz -->\nokay\n'),'<!-- Foo\n\nbar\n   baz -->\n<p>okay</p>\n');
////test(md('<?php\n\n  echo '>';\n\n?>\nokay\n'),'<?php\n\n  echo '>';\n\n?>\n<p>okay</p>\n');
//test(md('<!DOCTYPE html>\n'),'<!DOCTYPE html>\n');
//test(md('<![CDATA[\nfunction matchwo(a,b)\n{\n  if (a < b && a < 0) then {\n    return 1;\n\n  } else {\n\n    return 0;\n  }\n}\n]]>\nokay\n'),'<![CDATA[\nfunction matchwo(a,b)\n{\n  if (a < b && a < 0) then {\n    return 1;\n\n  } else {\n\n    return 0;\n  }\n}\n]]>\n<p>okay</p>\n');
//test(md('  <!-- foo -->\n\n    <!-- foo -->\n'),'  <!-- foo -->\n<pre><code>&lt;!-- foo --&gt;\n</code></pre>\n');
//test(md('  <div>\n\n    <div>\n'),'  <div>\n<pre><code>&lt;div&gt;\n</code></pre>\n');
//test(md('Foo\n<div>\nbar\n</div>\n'),'<p>Foo</p>\n<div>\nbar\n</div>\n');
//test(md('<div>\nbar\n</div>\n*foo*\n'),'<div>\nbar\n</div>\n*foo*\n');
//test(md('Foo\n<a href=\"bar\">\nbaz\n'),'<p>Foo\n<a href=\"bar\">\nbaz</p>\n');
//test(md('<div>\n\n*Emphasized* text.\n\n</div>\n'),'<div>\n<p><em>Emphasized</em> text.</p>\n</div>\n');
//test(md('<div>\n*Emphasized* text.\n</div>\n'),'<div>\n*Emphasized* text.\n</div>\n');
//test(md('<table>\n\n<tr>\n\n<td>\nHi\n</td>\n\n</tr>\n\n</table>\n'),'<table>\n<tr>\n<td>\nHi\n</td>\n</tr>\n</table>\n');
//test(md('<table>\n\n  <tr>\n\n    <td>\n      Hi\n    </td>\n\n  </tr>\n\n</table>\n'),'<table>\n  <tr>\n<pre><code>&lt;td&gt;\n  Hi\n&lt;/td&gt;\n</code></pre>\n  </tr>\n</table>\n');
//test(md('[foo]: /url \"title\"\n\n[foo]\n'),'<p><a href=\"/url\" title=\"title\">foo</a></p>\n');
//test(md("   [foo]: \n      /url  \n           'the title'  \n\n[foo]\n"),'<p><a href=\"/url\" title=\"the title\">foo</a></p>\n');
//test(md("[Foo*bar\\]]:my_(url) 'title (with parens)'\n\n[Foo*bar\\]]\n"),'<p><a href=\"my_(url)\" title=\"title (with parens)\">Foo*bar]</a></p>\n');
//test(md("[Foo bar]:\n<my url>\n'title'\n\n[Foo bar]\n"),'<p><a href=\"my%20url\" title=\"title\">Foo bar</a></p>\n');
//test(md("[foo]: /url '\ntitle\nline1\nline2\n'\n\n[foo]\n"),'<p><a href=\"/url\" title=\"\ntitle\nline1\nline2\n\">foo</a></p>\n');
//test(md("[foo]: /url 'title\n\nwith blank line'\n\n[foo]\n"),"<p>[foo]: /url 'title</p>\n<p>with blank line'</p>\n<p>[foo]</p>\n");
//test(md('[foo]:\n/url\n\n[foo]\n'),'<p><a href=\"/url\">foo</a></p>\n');
test(md('[foo]:\n\n[foo]\n'),'<p>[foo]:</p>\n<p>[foo]</p>\n');
//test(md('[foo]: <>\n\n[foo]\n'),'<p><a href=\"\">foo</a></p>\n');
test(md('[foo]: <bar>(baz)\n\n[foo]\n'),'<p>[foo]: <bar>(baz)</p>\n<p>[foo]</p>\n');
//test(md('[foo]: /url\\bar\\*baz \"foo\\\"bar\\baz\"\n\n[foo]\n'),'<p><a href=\"/url%5Cbar*baz\" title=\"foo&quot;bar\\baz\">foo</a></p>\n');
//test(md('[foo]\n\n[foo]: first\n[foo]: second\n'),'<p><a href=\"first\">foo</a></p>\n');
//test(md('[FOO]: /url\n\n[Foo]\n'),'<p><a href=\"/url\">Foo</a></p>\n');
//test(md('[ΑΓΩ]: /φου\n\n[αγω]\n'),'<p><a href=\"/%CF%86%CE%BF%CF%85\">αγω</a></p>\n');
//test(md("[foo]: /url\n"),');
//test(md('[\nfoo\n]: /url\nbar\n'),'<p>bar</p>\n');
//test(md('[foo]: /url \"title\" ok\n'),'<p>[foo]: /url &quot;title&quot; ok</p>\n');
//test(md('[foo]: /url\n\"title\" ok\n'),'<p>&quot;title&quot; ok</p>\n');
//test(md('    [foo]: /url \"title\"\n\n[foo]\n'),'<pre><code>[foo]: /url &quot;title&quot;\n</code></pre>\n<p>[foo]</p>\n');
//test(md('```\n[foo]: /url\n```\n\n[foo]\n'),'<pre><code>[foo]: /url\n</code></pre>\n<p>[foo]</p>\n');
//test(md('Foo\n[bar]: /baz\n\n[bar]\n'),'<p>Foo\n[bar]: /baz</p>\n<p>[bar]</p>\n');
//test(md('# [Foo]\n[foo]: /url\n> bar\n'),'<h1><a href=\"/url\">Foo</a></h1>\n<blockquote>\n<p>bar</p>\n</blockquote>\n');
//test(md('[foo]: /url\nbar\n===\n[foo]\n'),'<h1>bar</h1>\n<p><a href=\"/url\">foo</a></p>\n');
//test(md('[foo]: /url\n===\n[foo]\n'),'<p>===\n<a href=\"/url\">foo</a></p>\n');
//test(md('[foo]: /foo-url \"foo\"\n[bar]: /bar-url\n  \"bar\"\n[baz]: /baz-url\n\n[foo],\n[bar],\n[baz]\n'),'<p><a href=\"/foo-url\" title=\"foo\">foo</a>,\n<a href=\"/bar-url\" title=\"bar\">bar</a>,\n<a href=\"/baz-url\">baz</a></p>\n');
//test(md('[foo]\n\n> [foo]: /url\n'),'<p><a href=\"/url\">foo</a></p>\n<blockquote>\n</blockquote>\n');
//test(md('[foo]: /url\n'),');
test(md('aaa\n\nbbb\n'),'<p>aaa</p>\n<p>bbb</p>\n');
//test(md('aaa\nbbb\n\nccc\nddd\n'),'<p>aaa\nbbb</p>\n<p>ccc\nddd</p>\n');
//test(md('aaa\n\n\nbbb\n'),'<p>aaa</p>\n<p>bbb</p>\n');
//test(md('  aaa\n bbb\n'),'<p>aaa\nbbb</p>\n');
//test(md('aaa\n             bbb\n                                       ccc\n'),'<p>aaa\nbbb\nccc</p>\n');
//test(md('   aaa\nbbb\n'),'<p>aaa\nbbb</p>\n');
test(md('    aaa\nbbb\n'),'<pre><code>aaa\n</code></pre>\n<p>bbb</p>\n');
//test(md('aaa     \nbbb     \n'),'<p>aaa<br />\nbbb</p>\n');
//test(md('  \n\naaa\n  \n\n# aaa\n\n  \n'),'<p>aaa</p>\n<h1>aaa</h1>\n');
//test(md('> # Foo\n> bar\n> baz\n'),'<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n');
//test(md('># Foo\n>bar\n> baz\n'),'<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n');
//test(md('   > # Foo\n   > bar\n > baz\n'),'<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n');
//test(md('    > # Foo\n    > bar\n    > baz\n'),'<pre><code>&gt; # Foo\n&gt; bar\n&gt; baz\n</code></pre>\n');
//test(md('> # Foo\n> bar\nbaz\n'),'<blockquote>\n<h1>Foo</h1>\n<p>bar\nbaz</p>\n</blockquote>\n');
//test(md('> bar\nbaz\n> foo\n'),'<blockquote>\n<p>bar\nbaz\nfoo</p>\n</blockquote>\n');
//test(md('> foo\n---\n'),'<blockquote>\n<p>foo</p>\n</blockquote>\n<hr />\n');
//test(md('> - foo\n- bar\n'),'<blockquote>\n<ul>\n<li>foo</li>\n</ul>\n</blockquote>\n<ul>\n<li>bar</li>\n</ul>\n');
//test(md('>     foo\n    bar\n'),'<blockquote>\n<pre><code>foo\n</code></pre>\n</blockquote>\n<pre><code>bar\n</code></pre>\n');
//test(md('> ```\nfoo\n```\n'),'<blockquote>\n<pre><code></code></pre>\n</blockquote>\n<p>foo</p>\n<pre><code></code></pre>\n');
//test(md('> foo\n    - bar\n'),'<blockquote>\n<p>foo\n- bar</p>\n</blockquote>\n');
//test(md('>\n'),'<blockquote>\n</blockquote>\n');
//test(md('>\n>  \n> \n'),'<blockquote>\n</blockquote>\n');
//test(md('>\n> foo\n>  \n'),'<blockquote>\n<p>foo</p>\n</blockquote>\n');
//test(md('> foo\n\n> bar\n'),'<blockquote>\n<p>foo</p>\n</blockquote>\n<blockquote>\n<p>bar</p>\n</blockquote>\n');
//test(md('> foo\n> bar\n'),'<blockquote>\n<p>foo\nbar</p>\n</blockquote>\n');
//test(md('> foo\n>\n> bar\n'),'<blockquote>\n<p>foo</p>\n<p>bar</p>\n</blockquote>\n');
//test(md('foo\n> bar\n'),'<p>foo</p>\n<blockquote>\n<p>bar</p>\n</blockquote>\n');
//test(md('> aaa\n***\n> bbb\n'),'<blockquote>\n<p>aaa</p>\n</blockquote>\n<hr />\n<blockquote>\n<p>bbb</p>\n</blockquote>\n');
//test(md('> bar\nbaz\n'),'<blockquote>\n<p>bar\nbaz</p>\n</blockquote>\n');
//test(md('> bar\n\nbaz\n'),'<blockquote>\n<p>bar</p>\n</blockquote>\n<p>baz</p>\n');
//test(md('> bar\n>\nbaz\n'),'<blockquote>\n<p>bar</p>\n</blockquote>\n<p>baz</p>\n');
//test(md('> > > foo\nbar\n'),'<blockquote>\n<blockquote>\n<blockquote>\n<p>foo\nbar</p>\n</blockquote>\n</blockquote>\n</blockquote>\n');
//test(md('>>> foo\n> bar\n>>baz\n'),'<blockquote>\n<blockquote>\n<blockquote>\n<p>foo\nbar\nbaz</p>\n</blockquote>\n</blockquote>\n</blockquote>\n');
//test(md('>     code\n\n>    not code\n'),'<blockquote>\n<pre><code>code\n</code></pre>\n</blockquote>\n<blockquote>\n<p>not code</p>\n</blockquote>\n');
//test(md('A paragraph\nwith two lines.\n\n    indented code\n\n> A block quote.\n'),'<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n');
//test(md('1.  A paragraph\n    with two lines.\n\n        indented code\n\n    > A block quote.\n'),'<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>\n');
//test(md('- one\n\n two\n'),'<ul>\n<li>one</li>\n</ul>\n<p>two</p>\n');
//test(md('- one\n\n  two\n'),'<ul>\n<li>\n<p>one</p>\n<p>two</p>\n</li>\n</ul>\n');
//test(md(' -    one\n\n     two\n'),'<ul>\n<li>one</li>\n</ul>\n<pre><code> two\n</code></pre>\n');
//test(md(' -    one\n\n      two\n'),'<ul>\n<li>\n<p>one</p>\n<p>two</p>\n</li>\n</ul>\n');
//test(md('   > > 1.  one\n>>\n>>     two\n'),'<blockquote>\n<blockquote>\n<ol>\n<li>\n<p>one</p>\n<p>two</p>\n</li>\n</ol>\n</blockquote>\n</blockquote>\n');
//test(md('>>- one\n>>\n  >  > two\n'),'<blockquote>\n<blockquote>\n<ul>\n<li>one</li>\n</ul>\n<p>two</p>\n</blockquote>\n</blockquote>\n');
test(md('-one\n\n2.two\n'),'<p>-one</p>\n<p>2.two</p>\n');
//test(md('- foo\n\n\n  bar\n'),'<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>\n');
//test(md('1.  foo\n\n    ```\n    bar\n    ```\n\n    baz\n\n    > bam\n'),'<ol>\n<li>\n<p>foo</p>\n<pre><code>bar\n</code></pre>\n<p>baz</p>\n<blockquote>\n<p>bam</p>\n</blockquote>\n</li>\n</ol>\n');
//test(md('- Foo\n\n      bar\n\n\n      baz\n'),'<ul>\n<li>\n<p>Foo</p>\n<pre><code>bar\n\n\nbaz\n</code></pre>\n</li>\n</ul>\n');
//test(md('123456789. ok\n'),'<ol start=\"123456789\">\n<li>ok</li>\n</ol>\n');
//test(md('1234567890. not ok\n'),'<p>1234567890. not ok</p>\n');
//test(md('0. ok\n'),'<ol start=\"0\">\n<li>ok</li>\n</ol>\n');
//test(md('003. ok\n'),'<ol start=\"3\">\n<li>ok</li>\n</ol>\n');
test(md('-1. not ok\n'),'<p>-1. not ok</p>\n');
//test(md('- foo\n\n      bar\n'),'<ul>\n<li>\n<p>foo</p>\n<pre><code>bar\n</code></pre>\n</li>\n</ul>\n');
//test(md('  10.  foo\n\n           bar\n'),'<ol start=\"10\">\n<li>\n<p>foo</p>\n<pre><code>bar\n</code></pre>\n</li>\n</ol>\n');
test(md('    indented code\n\nparagraph\n\n    more code\n'),'<pre><code>indented code\n</code></pre>\n<p>paragraph</p>\n<pre><code>more code\n</code></pre>\n');
//test(md('1.     indented code\n\n   paragraph\n\n       more code\n'),'<ol>\n<li>\n<pre><code>indented code\n</code></pre>\n<p>paragraph</p>\n<pre><code>more code\n</code></pre>\n</li>\n</ol>\n');
//test(md('1.      indented code\n\n   paragraph\n\n       more code\n'),'<ol>\n<li>\n<pre><code> indented code\n</code></pre>\n<p>paragraph</p>\n<pre><code>more code\n</code></pre>\n</li>\n</ol>\n');
//test(md('   foo\n\nbar\n'),'<p>foo</p>\n<p>bar</p>\n');
//test(md('-    foo\n\n  bar\n'),'<ul>\n<li>foo</li>\n</ul>\n<p>bar</p>\n');
//test(md('-  foo\n\n   bar\n'),'<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>\n');
//test(md('-\n  foo\n-\n  ```\n  bar\n  ```\n-\n      baz\n'),'<ul>\n<li>foo</li>\n<li>\n<pre><code>bar\n</code></pre>\n</li>\n<li>\n<pre><code>baz\n</code></pre>\n</li>\n</ul>\n');
//test(md('-   \n  foo\n'),'<ul>\n<li>foo</li>\n</ul>\n');
//test(md('-\n\n  foo\n'),'<ul>\n<li></li>\n</ul>\n<p>foo</p>\n');
//test(md('- foo\n-\n- bar\n'),'<ul>\n<li>foo</li>\n<li></li>\n<li>bar</li>\n</ul>\n');
//test(md('- foo\n-   \n- bar\n'),'<ul>\n<li>foo</li>\n<li></li>\n<li>bar</li>\n</ul>\n');
//test(md('1. foo\n2.\n3. bar\n'),'<ol>\n<li>foo</li>\n<li></li>\n<li>bar</li>\n</ol>\n');
//test(md('*\n'),'<ul>\n<li></li>\n</ul>\n');
//test(md('foo\n*\n\nfoo\n1.\n'),'<p>foo\n*</p>\n<p>foo\n1.</p>\n');
//test(md(' 1.  A paragraph\n     with two lines.\n\n         indented code\n\n     > A block quote.\n'),'<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>\n');
//test(md('  1.  A paragraph\n      with two lines.\n\n          indented code\n\n      > A block quote.\n'),'<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>\n');
//test(md('   1.  A paragraph\n       with two lines.\n\n           indented code\n\n       > A block quote.\n'),'<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>\n');
//test(md('    1.  A paragraph\n        with two lines.\n\n            indented code\n\n        > A block quote.\n'),'<pre><code>1.  A paragraph\n    with two lines.\n\n        indented code\n\n    &gt; A block quote.\n</code></pre>\n');
//test(md('  1.  A paragraph\nwith two lines.\n\n          indented code\n\n      > A block quote.\n'),'<ol>\n<li>\n<p>A paragraph\nwith two lines.</p>\n<pre><code>indented code\n</code></pre>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n</li>\n</ol>\n');
//test(md('  1.  A paragraph\n    with two lines.\n'),'<ol>\n<li>A paragraph\nwith two lines.</li>\n</ol>\n');
//test(md('> 1. > Blockquote\ncontinued here.\n'),'<blockquote>\n<ol>\n<li>\n<blockquote>\n<p>Blockquote\ncontinued here.</p>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n');
//test(md('> 1. > Blockquote\n> continued here.\n'),'<blockquote>\n<ol>\n<li>\n<blockquote>\n<p>Blockquote\ncontinued here.</p>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n');
//test(md('- foo\n  - bar\n    - baz\n      - boo\n'),'<ul>\n<li>foo\n<ul>\n<li>bar\n<ul>\n<li>baz\n<ul>\n<li>boo</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n');
//test(md('- foo\n - bar\n  - baz\n   - boo\n'),'<ul>\n<li>foo</li>\n<li>bar</li>\n<li>baz</li>\n<li>boo</li>\n</ul>\n');
//test(md('10) foo\n    - bar\n'),'<ol start=\"10\">\n<li>foo\n<ul>\n<li>bar</li>\n</ul>\n</li>\n</ol>\n');
//test(md('10) foo\n   - bar\n'),'<ol start=\"10\">\n<li>foo</li>\n</ol>\n<ul>\n<li>bar</li>\n</ul>\n');
//test(md('- - foo\n'),'<ul>\n<li>\n<ul>\n<li>foo</li>\n</ul>\n</li>\n</ul>\n');
//test(md('1. - 2. foo\n'),'<ol>\n<li>\n<ul>\n<li>\n<ol start=\"2\">\n<li>foo</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n');
//test(md('- # Foo\n- Bar\n  ---\n  baz\n'),'<ul>\n<li>\n<h1>Foo</h1>\n</li>\n<li>\n<h2>Bar</h2>\nbaz</li>\n</ul>\n');
//test(md('- foo\n- bar\n+ baz\n'),'<ul>\n<li>foo</li>\n<li>bar</li>\n</ul>\n<ul>\n<li>baz</li>\n</ul>\n');
//test(md('1. foo\n2. bar\n3) baz\n'),'<ol>\n<li>foo</li>\n<li>bar</li>\n</ol>\n<ol start=\"3\">\n<li>baz</li>\n</ol>\n');
test(md('Foo\n- bar\n- baz\n'),'<p>Foo</p>\n<ul>\n<li>bar</li>\n<li>baz</li>\n</ul>\n');
//test(md('The number of windows in my house is\n14.  The number of doors is 6.\n'),'<p>The number of windows in my house is\n14.  The number of doors is 6.</p>\n');
//test(md('The number of windows in my house is\n1.  The number of doors is 6.\n'),'<p>The number of windows in my house is</p>\n<ol>\n<li>The number of doors is 6.</li>\n</ol>\n');
//test(md('- foo\n\n- bar\n\n\n- baz\n'),'<ul>\n<li>\n<p>foo</p>\n</li>\n<li>\n<p>bar</p>\n</li>\n<li>\n<p>baz</p>\n</li>\n</ul>\n');
//test(md('- foo\n  - bar\n    - baz\n\n\n      bim\n'),'<ul>\n<li>foo\n<ul>\n<li>bar\n<ul>\n<li>\n<p>baz</p>\n<p>bim</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n');
//test(md('- foo\n- bar\n\n<!-- -->\n\n- baz\n- bim\n'),'<ul>\n<li>foo</li>\n<li>bar</li>\n</ul>\n<!-- -->\n<ul>\n<li>baz</li>\n<li>bim</li>\n</ul>\n');
//test(md('-   foo\n\n    notcode\n\n-   foo\n\n<!-- -->\n\n    code\n'),'<ul>\n<li>\n<p>foo</p>\n<p>notcode</p>\n</li>\n<li>\n<p>foo</p>\n</li>\n</ul>\n<!-- -->\n<pre><code>code\n</code></pre>\n');
//test(md('- a\n - b\n  - c\n   - d\n  - e\n - f\n- g\n'),'<ul>\n<li>a</li>\n<li>b</li>\n<li>c</li>\n<li>d</li>\n<li>e</li>\n<li>f</li>\n<li>g</li>\n</ul>\n');
//test(md('1. a\n\n  2. b\n\n   3. c\n'),'<ol>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n</li>\n<li>\n<p>c</p>\n</li>\n</ol>\n');
//test(md('- a\n - b\n  - c\n   - d\n    - e\n'),'<ul>\n<li>a</li>\n<li>b</li>\n<li>c</li>\n<li>d\n- e</li>\n</ul>\n');
//test(md('1. a\n\n  2. b\n\n    3. c\n'),'<ol>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n</li>\n</ol>\n<pre><code>3. c\n</code></pre>\n');
//test(md('- a\n- b\n\n- c\n'),'<ul>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n</li>\n<li>\n<p>c</p>\n</li>\n</ul>\n');
//test(md('* a\n*\n\n* c\n'),'<ul>\n<li>\n<p>a</p>\n</li>\n<li></li>\n<li>\n<p>c</p>\n</li>\n</ul>\n');
//test(md('- a\n- b\n\n  c\n- d\n'),'<ul>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n<p>c</p>\n</li>\n<li>\n<p>d</p>\n</li>\n</ul>\n');
//test(md('- a\n- b\n\n  [ref]: /url\n- d\n'),'<ul>\n<li>\n<p>a</p>\n</li>\n<li>\n<p>b</p>\n</li>\n<li>\n<p>d</p>\n</li>\n</ul>\n');
//test(md('- a\n- ```\n  b\n\n\n  ```\n- c\n'),'<ul>\n<li>a</li>\n<li>\n<pre><code>b\n\n\n</code></pre>\n</li>\n<li>c</li>\n</ul>\n');
//test(md('- a\n  - b\n\n    c\n- d\n'),'<ul>\n<li>a\n<ul>\n<li>\n<p>b</p>\n<p>c</p>\n</li>\n</ul>\n</li>\n<li>d</li>\n</ul>\n');
//test(md('* a\n  > b\n  >\n* c\n'),'<ul>\n<li>a\n<blockquote>\n<p>b</p>\n</blockquote>\n</li>\n<li>c</li>\n</ul>\n');
//test(md('- a\n  > b\n  ```\n  c\n  ```\n- d\n'),'<ul>\n<li>a\n<blockquote>\n<p>b</p>\n</blockquote>\n<pre><code>c\n</code></pre>\n</li>\n<li>d</li>\n</ul>\n');
test(md('- a\n'),'<ul>\n<li>a</li>\n</ul>\n');
//test(md('- a\n  - b\n'),'<ul>\n<li>a\n<ul>\n<li>b</li>\n</ul>\n</li>\n</ul>\n');
//test(md('1. ```\n   foo\n   ```\n\n   bar\n'),'<ol>\n<li>\n<pre><code>foo\n</code></pre>\n<p>bar</p>\n</li>\n</ol>\n');
//test(md('* foo\n  * bar\n\n  baz\n'),'<ul>\n<li>\n<p>foo</p>\n<ul>\n<li>bar</li>\n</ul>\n<p>baz</p>\n</li>\n</ul>\n');
//test(md('- a\n  - b\n  - c\n\n- d\n  - e\n  - f\n'),'<ul>\n<li>\n<p>a</p>\n<ul>\n<li>b</li>\n<li>c</li>\n</ul>\n</li>\n<li>\n<p>d</p>\n<ul>\n<li>e</li>\n<li>f</li>\n</ul>\n</li>\n</ul>\n');
test(md('`hi`lo`\n'),'<p><code>hi</code>lo`</p>\n');
//test(md("\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\-\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\_\\`\\{\\|\\}\\~\n"),"<p>!&quot;#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{|}~</p>\n");
//test(md('\\\t\\A\\a\\ \\3\\φ\\«\n'),'<p>\\\t\\A\\a\\ \\3\\φ\\«</p>\n');
//test(md('\\*not emphasized*\n\\<br/> not a tag\n\\[not a link](/foo)\n\\`not code`\n1\\. not a list\n\\* not a list\n\\# not a heading\n\\[foo]: /url \"not a reference\"\n\\&ouml; not a character entity\n'),'<p>*not emphasized*\n&lt;br/&gt; not a tag\n[not a link](/foo)\n`not code`\n1. not a list\n* not a list\n# not a heading\n[foo]: /url &quot;not a reference&quot;\n&amp;ouml; not a character entity</p>\n');
//test(md('\\\\*emphasis*\n'),'<p>\\<em>emphasis</em></p>\n');
//test(md('foo\\\nbar\n'),'<p>foo<br />\nbar</p>\n');
//test(md('`` \\[\\` ``\n'),'<p><code>\\[\\`</code></p>\n');
test(md('    \\[\\]\n'),'<pre><code>\\[\\]\n</code></pre>\n');
//test(md('~~~\n\\[\\]\n~~~\n'),'<pre><code>\\[\\]\n</code></pre>\n');
//test(md('<http://example.com?find=\\*>\n'),'<p><a href=\"http://example.com?find=%5C*\">http://example.com?find=\\*</a></p>\n');
//test(md('<a href=\"/bar\\/)\">\n'),'<a href=\"/bar\\/)\">\n');
//test(md('[foo](/bar\\* \"ti\\*tle\")\n'),'<p><a href=\"/bar*\" title=\"ti*tle\">foo</a></p>\n');
//test(md('[foo]\n\n[foo]: /bar\\* \"ti\\*tle\"\n'),'<p><a href=\"/bar*\" title=\"ti*tle\">foo</a></p>\n');
//test(md('``` foo\\+bar\nfoo\n```\n'),'<pre><code class=\"language-foo+bar\">foo\n</code></pre>\n');
//test(md('&nbsp; &amp; &copy; &AElig; &Dcaron;\n&frac34; &HilbertSpace; &DifferentialD;\n&ClockwiseContourIntegral; &ngE;\n'),'<p>  &amp; © Æ Ď\n¾ ℋ ⅆ\n∲ ≧̸</p>\n');
//test(md('&#35; &#1234; &#992; &#0;\n'),'<p># Ӓ Ϡ �</p>\n');
//test(md('&#X22; &#XD06; &#xcab;\n'),'<p>&quot; ആ ಫ</p>\n');
//test(md('&nbsp &x; &#; &#x;\n&#987654321;\n&#abcdef0;\n&ThisIsNotDefined; &hi?;\n'),'<p>&amp;nbsp &amp;x; &amp;#; &amp;#x;\n&amp;#987654321;\n&amp;#abcdef0;\n&amp;ThisIsNotDefined; &amp;hi?;</p>\n');
//test(md('&copy\n'),'<p>&amp;copy</p>\n');
//test(md('&MadeUpEntity;\n'),'<p>&amp;MadeUpEntity;</p>\n');
//test(md('<a href=\"&ouml;&ouml;.html\">\n'),'<a href=\"&ouml;&ouml;.html\">\n');
//test(md('[foo](/f&ouml;&ouml; \"f&ouml;&ouml;\")\n'),'<p><a href=\"/f%C3%B6%C3%B6\" title=\"föö\">foo</a></p>\n');
//test(md('[foo]\n\n[foo]: /f&ouml;&ouml; \"f&ouml;&ouml;\"\n'),'<p><a href=\"/f%C3%B6%C3%B6\" title=\"föö\">foo</a></p>\n');
//test(md('``` f&ouml;&ouml;\nfoo\n```\n'),'<pre><code class=\"language-föö\">foo\n</code></pre>\n');
//test(md('`f&ouml;&ouml;`\n'),'<p><code>f&amp;ouml;&amp;ouml;</code></p>\n');
//test(md('    f&ouml;f&ouml;\n'),'<pre><code>f&amp;ouml;f&amp;ouml;\n</code></pre>\n');
//test(md('&#42;foo&#42;\n*foo*\n'),'<p>*foo*\n<em>foo</em></p>\n');
//test(md('&#42; foo\n\n* foo\n'),'<p>* foo</p>\n<ul>\n<li>foo</li>\n</ul>\n');
//test(md('foo&#10;&#10;bar\n'),'<p>foo\n\nbar</p>\n');
//test(md('&#9;foo\n'),'<p>\tfoo</p>\n');
test(md('[a](url &quot;tit&quot;)\n'),'<p>[a](url &quot;tit&quot;)</p>\n');
test(md('`foo`\n'),'<p><code>foo</code></p>\n');
//test(md('`` foo ` bar ``\n'),'<p><code>foo ` bar</code></p>\n');
//test(md('` `` `\n'),'<p><code>``</code></p>\n');
//test(md('`  ``  `\n'),'<p><code> `` </code></p>\n');
test(md('` a`\n'),'<p><code> a</code></p>\n');
test(md('` b `\n'),'<p><code> b </code></p>\n');
//test(md('` `\n`  `\n'),'<p><code> </code>\n<code>  </code></p>\n');
//test(md('``\nfoo\nbar  \nbaz\n``\n'),'<p><code>foo bar   baz</code></p>\n');
//test(md('``\nfoo \n``\n'),'<p><code>foo </code></p>\n');
//test(md('`foo   bar \nbaz`\n'),'<p><code>foo   bar  baz</code></p>\n');
test(md('`foo\\`bar`\n'),'<p><code>foo\\</code>bar`</p>\n');
//test(md('``foo`bar``\n'),'<p><code>foo`bar</code></p>\n');
//test(md('` foo `` bar `\n'),'<p><code>foo `` bar</code></p>\n');
test(md('*foo`*`\n'),'<p>*foo<code>*</code></p>\n');
//test(md('[not a `link](/foo`)\n'),'<p>[not a <code>link](/foo</code>)</p>\n');
//test(md('`<a href=\"`\">`\n'),'<p><code>&lt;a href=&quot;</code>&quot;&gt;`</p>\n');
//test(md('<a href=\"`\">`\n'),'<p><a href=\"`\">`</p>\n');
//test(md('`<http://foo.bar.`baz>`\n'),'<p><code>&lt;http://foo.bar.</code>baz&gt;`</p>\n');
//test(md('<http://foo.bar.`baz>`\n'),'<p><a href=\"http://foo.bar.%60baz\">http://foo.bar.`baz</a>`</p>\n');
//test(md('```foo``\n'),'<p>```foo``</p>\n');
test(md('`foo\n'),'<p>`foo</p>\n');
//test(md('`foo``bar``\n'),'<p>`foo<code>bar</code></p>\n');
//test(md('*foo bar*\n'),'<p><em>foo bar</em></p>\n');
//test(md('a * foo bar*\n'),'<p>a * foo bar*</p>\n');
//test(md('a*\"foo\"*\n'),'<p>a*&quot;foo&quot;*</p>\n');
//test(md('* a *\n'),'<p>* a *</p>\n');
//test(md('foo*bar*\n'),'<p>foo<em>bar</em></p>\n');
//test(md('5*6*78\n'),'<p>5<em>6</em>78</p>\n');
//test(md('_foo bar_\n'),'<p><em>foo bar</em></p>\n');
//test(md('_ foo bar_\n'),'<p>_ foo bar_</p>\n');
//test(md('a_\"foo\"_\n'),'<p>a_&quot;foo&quot;_</p>\n');
//test(md('foo_bar_\n'),'<p>foo_bar_</p>\n');
//test(md('5_6_78\n'),'<p>5_6_78</p>\n');
//test(md('пристаням_стремятся_\n'),'<p>пристаням_стремятся_</p>\n');
//test(md('aa_\"bb\"_cc\n'),'<p>aa_&quot;bb&quot;_cc</p>\n');
//test(md('foo-_(bar)_\n'),'<p>foo-<em>(bar)</em></p>\n');
test(md('_foo*\n'),'<p>_foo*</p>\n');
//test(md('*foo bar *\n'),'<p>*foo bar *</p>\n');
//test(md('*foo bar\n*\n'),'<p>*foo bar\n*</p>\n');
//test(md('*(*foo)\n'),'<p>*(*foo)</p>\n');
//test(md('*(*foo*)*\n'),'<p><em>(<em>foo</em>)</em></p>\n');
//test(md('*foo*bar\n'),'<p><em>foo</em>bar</p>\n');
//test(md('_foo bar _\n'),'<p>_foo bar _</p>\n');
//test(md('_(_foo)\n'),'<p>_(_foo)</p>\n');
//test(md('_(_foo_)_\n'),'<p><em>(<em>foo</em>)</em></p>\n');
//test(md('_foo_bar\n'),'<p>_foo_bar</p>\n');
//test(md('_пристаням_стремятся\n'),'<p>_пристаням_стремятся</p>\n');
//test(md('_foo_bar_baz_\n'),'<p><em>foo_bar_baz</em></p>\n');
//test(md('_(bar)_.\n'),'<p><em>(bar)</em>.</p>\n');
//test(md('**foo bar**\n'),'<p><strong>foo bar</strong></p>\n');
//test(md('** foo bar**\n'),'<p>** foo bar**</p>\n');
//test(md('a**\"foo\"**\n'),'<p>a**&quot;foo&quot;**</p>\n');
//test(md('foo**bar**\n'),'<p>foo<strong>bar</strong></p>\n');
//test(md('__foo bar__\n'),'<p><strong>foo bar</strong></p>\n');
//test(md('__ foo bar__\n'),'<p>__ foo bar__</p>\n');
//test(md('__\nfoo bar__\n'),'<p>__\nfoo bar__</p>\n');
//test(md('a__\"foo\"__\n'),'<p>a__&quot;foo&quot;__</p>\n');
//test(md('foo__bar__\n'),'<p>foo__bar__</p>\n');
//test(md('5__6__78\n'),'<p>5__6__78</p>\n');
//test(md('пристаням__стремятся__\n'),'<p>пристаням__стремятся__</p>\n');
//test(md('__foo, __bar__, baz__\n'),'<p><strong>foo, <strong>bar</strong>, baz</strong></p>\n');
//test(md('foo-__(bar)__\n'),'<p>foo-<strong>(bar)</strong></p>\n');
//test(md('**foo bar **\n'),'<p>**foo bar **</p>\n');
//test(md('**(**foo)\n'),'<p>**(**foo)</p>\n');
//test(md('*(**foo**)*\n'),'<p><em>(<strong>foo</strong>)</em></p>\n');
//test(md('**Gomphocarpus (*Gomphocarpus physocarpus*, syn.\n*Asclepias physocarpa*)**\n'),'<p><strong>Gomphocarpus (<em>Gomphocarpus physocarpus</em>, syn.\n<em>Asclepias physocarpa</em>)</strong></p>\n');
//test(md('**foo \"*bar*\" foo**\n'),'<p><strong>foo &quot;<em>bar</em>&quot; foo</strong></p>\n');
//test(md('**foo**bar\n'),'<p><strong>foo</strong>bar</p>\n');
//test(md('__foo bar __\n'),'<p>__foo bar __</p>\n');
//test(md('__(__foo)\n'),'<p>__(__foo)</p>\n');
//test(md('_(__foo__)_\n'),'<p><em>(<strong>foo</strong>)</em></p>\n');
//test(md('__foo__bar\n'),'<p>__foo__bar</p>\n');
//test(md('__пристаням__стремятся\n'),'<p>__пристаням__стремятся</p>\n');
//test(md('__foo__bar__baz__\n'),'<p><strong>foo__bar__baz</strong></p>\n');
//test(md('__(bar)__.\n'),'<p><strong>(bar)</strong>.</p>\n');
//test(md('*foo [bar](/url)*\n'),'<p><em>foo <a href=\"/url\">bar</a></em></p>\n');
//test(md('*foo\nbar*\n'),'<p><em>foo\nbar</em></p>\n');
//test(md('_foo __bar__ baz_\n'),'<p><em>foo <strong>bar</strong> baz</em></p>\n');
//test(md('_foo _bar_ baz_\n'),'<p><em>foo <em>bar</em> baz</em></p>\n');
//test(md('__foo_ bar_\n'),'<p><em><em>foo</em> bar</em></p>\n');
//test(md('*foo *bar**\n'),'<p><em>foo <em>bar</em></em></p>\n');
//test(md('*foo **bar** baz*\n'),'<p><em>foo <strong>bar</strong> baz</em></p>\n');
//test(md('*foo**bar**baz*\n'),'<p><em>foo<strong>bar</strong>baz</em></p>\n');
//test(md('*foo**bar*\n'),'<p><em>foo**bar</em></p>\n');
//test(md('***foo** bar*\n'),'<p><em><strong>foo</strong> bar</em></p>\n');
//test(md('*foo **bar***\n'),'<p><em>foo <strong>bar</strong></em></p>\n');
//test(md('*foo**bar***\n'),'<p><em>foo<strong>bar</strong></em></p>\n');
//test(md('foo***bar***baz\n'),'<p>foo<em><strong>bar</strong></em>baz</p>\n');
//test(md('foo******bar*********baz\n'),'<p>foo<strong><strong><strong>bar</strong></strong></strong>***baz</p>\n');
//test(md('*foo **bar *baz* bim** bop*\n'),'<p><em>foo <strong>bar <em>baz</em> bim</strong> bop</em></p>\n');
//test(md('*foo [*bar*](/url)*\n'),'<p><em>foo <a href=\"/url\"><em>bar</em></a></em></p>\n');
test(md('** is not an empty emphasis\n'),'<p>** is not an empty emphasis</p>\n');
//test(md('**** is not an empty strong emphasis\n'),'<p>**** is not an empty strong emphasis</p>\n');
//test(md('**foo [bar](/url)**\n'),'<p><strong>foo <a href=\"/url\">bar</a></strong></p>\n');
//test(md('**foo\nbar**\n'),'<p><strong>foo\nbar</strong></p>\n');
//test(md('__foo _bar_ baz__\n'),'<p><strong>foo <em>bar</em> baz</strong></p>\n');
//test(md('__foo __bar__ baz__\n'),'<p><strong>foo <strong>bar</strong> baz</strong></p>\n');
//test(md('____foo__ bar__\n'),'<p><strong><strong>foo</strong> bar</strong></p>\n');
//test(md('**foo **bar****\n'),'<p><strong>foo <strong>bar</strong></strong></p>\n');
//test(md('**foo *bar* baz**\n'),'<p><strong>foo <em>bar</em> baz</strong></p>\n');
//test(md('**foo*bar*baz**\n'),'<p><strong>foo<em>bar</em>baz</strong></p>\n');
//test(md('***foo* bar**\n'),'<p><strong><em>foo</em> bar</strong></p>\n');
//test(md('**foo *bar***\n'),'<p><strong>foo <em>bar</em></strong></p>\n');
//test(md('**foo *bar **baz**\nbim* bop**\n'),'<p><strong>foo <em>bar <strong>baz</strong>\nbim</em> bop</strong></p>\n');
//test(md('**foo [*bar*](/url)**\n'),'<p><strong>foo <a href=\"/url\"><em>bar</em></a></strong></p>\n');
test(md('__ is not an empty emphasis\n'),'<p>__ is not an empty emphasis</p>\n');
//test(md('____ is not an empty strong emphasis\n'),'<p>____ is not an empty strong emphasis</p>\n');
test(md('foo ***\n'),'<p>foo ***</p>\n');
//test(md('foo *\\**\n'),'<p>foo <em>*</em></p>\n');
//test(md('foo *_*\n'),'<p>foo <em>_</em></p>\n');
test(md('foo *****\n'),'<p>foo *****</p>\n');
//test(md('foo **\\***\n'),'<p>foo <strong>*</strong></p>\n');
//test(md('foo **_**\n'),'<p>foo <strong>_</strong></p>\n');
//test(md('**foo*\n'),'<p>*<em>foo</em></p>\n');
//test(md('*foo**\n'),'<p><em>foo</em>*</p>\n');
//test(md('***foo**\n'),'<p>*<strong>foo</strong></p>\n');
//test(md('****foo*\n'),'<p>***<em>foo</em></p>\n');
//test(md('**foo***\n'),'<p><strong>foo</strong>*</p>\n');
//test(md('*foo****\n'),'<p><em>foo</em>***</p>\n');
test(md('foo ___\n'),'<p>foo ___</p>\n');
//test(md('foo _\\__\n'),'<p>foo <em>_</em></p>\n');
//test(md('foo _*_\n'),'<p>foo <em>*</em></p>\n');
test(md('foo _____\n'),'<p>foo _____</p>\n');
//test(md('foo __\\___\n'),'<p>foo <strong>_</strong></p>\n');
//test(md('foo __*__\n'),'<p>foo <strong>*</strong></p>\n');
//test(md('__foo_\n'),'<p>_<em>foo</em></p>\n');
//test(md('_foo__\n'),'<p><em>foo</em>_</p>\n');
//test(md('___foo__\n'),'<p>_<strong>foo</strong></p>\n');
//test(md('____foo_\n'),'<p>___<em>foo</em></p>\n');
//test(md('__foo___\n'),'<p><strong>foo</strong>_</p>\n');
//test(md('_foo____\n'),'<p><em>foo</em>___</p>\n');
//test(md('**foo**\n'),'<p><strong>foo</strong></p>\n');
//test(md('*_foo_*\n'),'<p><em><em>foo</em></em></p>\n');
//test(md('__foo__\n'),'<p><strong>foo</strong></p>\n');
//test(md('_*foo*_\n'),'<p><em><em>foo</em></em></p>\n');
//test(md('****foo****\n'),'<p><strong><strong>foo</strong></strong></p>\n');
//test(md('____foo____\n'),'<p><strong><strong>foo</strong></strong></p>\n');
//test(md('******foo******\n'),'<p><strong><strong><strong>foo</strong></strong></strong></p>\n');
//test(md('***foo***\n'),'<p><em><strong>foo</strong></em></p>\n');
//test(md('_____foo_____\n'),'<p><em><strong><strong>foo</strong></strong></em></p>\n');
//test(md('*foo _bar* baz_\n'),'<p><em>foo _bar</em> baz_</p>\n');
//test(md('*foo __bar *baz bim__ bam*\n'),'<p><em>foo <strong>bar *baz bim</strong> bam</em></p>\n');
//test(md('**foo **bar baz**\n'),'<p>**foo <strong>bar baz</strong></p>\n');
//test(md('*foo *bar baz*\n'),'<p>*foo <em>bar baz</em></p>\n');
test(md('*[bar*](/url)\n'),'<p>*<a href=\"/url\">bar*</a></p>\n');
test(md('_foo [bar_](/url)\n'),'<p>_foo <a href=\"/url\">bar_</a></p>\n');
//test(md('*<img src=\"foo\" title=\"*\"/>\n'),'<p>*<img src=\"foo\" title=\"*\"/></p>\n');
//test(md('**<a href=\"**\">\n'),'<p>**<a href=\"**\"></p>\n');
//test(md('__<a href=\"__\">\n'),'<p>__<a href=\"__\"></p>\n');
//test(md('*a `*`*\n'),'<p><em>a <code>*</code></em></p>\n');
//test(md('_a `_`_\n'),'<p><em>a <code>_</code></em></p>\n');
//test(md('**a<http://foo.bar/?q=**>\n'),'<p>**a<a href=\"http://foo.bar/?q=**\">http://foo.bar/?q=**</a></p>\n');
//test(md('__a<http://foo.bar/?q=__>\n'),'<p>__a<a href=\"http://foo.bar/?q=__\">http://foo.bar/?q=__</a></p>\n');
test(md('[link](/uri \"title\")\n'),'<p><a href=\"/uri\" title=\"title\">link</a></p>\n');
test(md('[link](/uri)\n'),'<p><a href=\"/uri\">link</a></p>\n');
//test(md('[link]()\n'),'<p><a href=\"\">link</a></p>\n');
//test(md('[link](<>)\n'),'<p><a href=\"\">link</a></p>\n');
test(md('[link](/my uri)\n'),'<p>[link](/my uri)</p>\n');
//test(md('[link](</my uri>)\n'),'<p><a href=\"/my%20uri\">link</a></p>\n');
//test(md('[link](foo\nbar)\n'),'<p>[link](foo\nbar)</p>\n');
//test(md('[link](<foo\nbar>)\n'),'<p>[link](<foo\nbar>)</p>\n');
//test(md('[a](<b)c>)\n'),'<p><a href=\"b)c\">a</a></p>\n');
//test(md('[link](<foo\\>)\n'),'<p>[link](&lt;foo&gt;)</p>\n');
//test(md('[a](<b)c\n[a](<b)c>\n[a](<b>c)\n'),'<p>[a](&lt;b)c\n[a](&lt;b)c&gt;\n[a](<b>c)</p>\n');
//test(md('[link](\\(foo\\))\n'),'<p><a href=\"(foo)\">link</a></p>\n');
//test(md('[link](foo(and(bar)))\n'),'<p><a href=\"foo(and(bar))\">link</a></p>\n');
//test(md('[link](foo\\(and\\(bar\\))\n'),'<p><a href=\"foo(and(bar)\">link</a></p>\n');
//test(md('[link](<foo(and(bar)>)\n'),'<p><a href=\"foo(and(bar)\">link</a></p>\n');
//test(md('[link](foo\\)\\:)\n'),'<p><a href=\"foo):\">link</a></p>\n');
test(md('[link](#fragment)\n\n[link](http://example.com#fragment)\n\n[link](http://example.com?foo=3#frag)\n'),'<p><a href=\"#fragment\">link</a></p>\n<p><a href=\"http://example.com#fragment\">link</a></p>\n<p><a href=\"http://example.com?foo=3#frag\">link</a></p>\n');
//test(md('[link](foo\\bar)\n'),'<p><a href=\"foo%5Cbar\">link</a></p>\n');
//test(md('[link](foo%20b&auml;)\n'),'<p><a href=\"foo%20b%C3%A4\">link</a></p>\n');
//test(md('[link](\"title\")\n'),'<p><a href=\"%22title%22\">link</a></p>\n');
//test(md("[link](/url \"title\")\n[link](/url 'title')\n[link](/url (title))\n"),'<p><a href=\"/url\" title=\"title\">link</a>\n<a href=\"/url\" title=\"title\">link</a>\n<a href=\"/url\" title=\"title\">link</a></p>\n');
//test(md('[link](/url \"title \\\"&quot;\")\n'),'<p><a href=\"/url\" title=\"title &quot;&quot;\">link</a></p>\n');
//test(md('[link](/url \"title\")\n'),'<p><a href=\"/url%C2%A0%22title%22\">link</a></p>\n');
//test(md('[link](/url \"title \"and\" title\")\n'),'<p>[link](/url &quot;title &quot;and&quot; title&quot;)</p>\n');
//test(md("[link](/url 'title \"and\" title')\n"),'<p><a href=\"/url\" title=\"title &quot;and&quot; title\">link</a></p>\n');
//test(md('[link](   /uri\n  \"title\"  )\n'),'<p><a href=\"/uri\" title=\"title\">link</a></p>\n');
test(md('[link] (/uri)\n'),'<p>[link] (/uri)</p>\n');
//test(md('[link [foo [bar]]](/uri)\n'),'<p><a href=\"/uri\">link [foo [bar]]</a></p>\n');
test(md('[link] bar](/uri)\n'),'<p>[link] bar](/uri)</p>\n');
//test(md('[link [bar](/uri)\n'),'<p>[link <a href=\"/uri\">bar</a></p>\n');
//test(md('[link \\[bar](/uri)\n'),'<p><a href=\"/uri\">link [bar</a></p>\n');
//test(md('[link *foo **bar** `#`*](/uri)\n'),'<p><a href=\"/uri\">link <em>foo <strong>bar</strong> <code>#</code></em></a></p>\n');
//test(md('[![moon](moon.jpg)](/uri)\n'),'<p><a href=\"/uri\"><img src=\"moon.jpg\" alt=\"moon\" /></a></p>\n');
//test(md('[foo [bar](/uri)](/uri)\n'),'<p>[foo <a href=\"/uri\">bar</a>](/uri)</p>\n');
//test(md('[foo *[bar [baz](/uri)](/uri)*](/uri)\n'),'<p>[foo <em>[bar <a href=\"/uri\">baz</a>](/uri)</em>](/uri)</p>\n');
//test(md('![[[foo](uri1)](uri2)](uri3)\n'),'<p><img src=\"uri3\" alt=\"[foo](uri2)\" /></p>\n');
test(md('*[foo*](/uri)\n'),'<p>*<a href=\"/uri\">foo*</a></p>\n');
test(md('[foo *bar](baz*)\n'),'<p><a href=\"baz*\">foo *bar</a></p>\n');
//test(md('*foo [bar* baz]\n'),'<p><em>foo [bar</em> baz]</p>\n');
//test(md('[foo <bar attr=\"](baz)\">\n'),'<p>[foo <bar attr=\"](baz)\"></p>\n');
//test(md('[foo`](/uri)`\n'),'<p>[foo<code>](/uri)</code></p>\n');
//test(md('[foo<http://example.com/?search=](uri)>\n'),'<p>[foo<a href=\"http://example.com/?search=%5D(uri)\">http://example.com/?search=](uri)</a></p>\n');
//test(md('[foo][bar]\n\n[bar]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\">foo</a></p>\n');
//test(md('[link [foo [bar]]][ref]\n\n[ref]: /uri\n'),'<p><a href=\"/uri\">link [foo [bar]]</a></p>\n');
//test(md('[link \\[bar][ref]\n\n[ref]: /uri\n'),'<p><a href=\"/uri\">link [bar</a></p>\n');
//test(md('[link *foo **bar** `#`*][ref]\n\n[ref]: /uri\n'),'<p><a href=\"/uri\">link <em>foo <strong>bar</strong> <code>#</code></em></a></p>\n');
//test(md('[![moon](moon.jpg)][ref]\n\n[ref]: /uri\n'),'<p><a href=\"/uri\"><img src=\"moon.jpg\" alt=\"moon\" /></a></p>\n');
//test(md('[foo [bar](/uri)][ref]\n\n[ref]: /uri\n'),'<p>[foo <a href=\"/uri\">bar</a>]<a href=\"/uri\">ref</a></p>\n');
//test(md('[foo *bar [baz][ref]*][ref]\n\n[ref]: /uri\n'),'<p>[foo <em>bar <a href=\"/uri\">baz</a></em>]<a href=\"/uri\">ref</a></p>\n');
//test(md('*[foo*][ref]\n\n[ref]: /uri\n'),'<p>*<a href=\"/uri\">foo*</a></p>\n');
//test(md('[foo *bar][ref]\n\n[ref]: /uri\n'),'<p><a href=\"/uri\">foo *bar</a></p>\n');
//test(md('[foo <bar attr=\"][ref]\">\n\n[ref]: /uri\n'),'<p>[foo <bar attr=\"][ref]\"></p>\n');
//test(md('[foo`][ref]`\n\n[ref]: /uri\n'),'<p>[foo<code>][ref]</code></p>\n');
//test(md('[foo<http://example.com/?search=][ref]>\n\n[ref]: /uri\n'),'<p>[foo<a href=\"http://example.com/?search=%5D%5Bref%5D\">http://example.com/?search=][ref]</a></p>\n');
//test(md('[foo][BaR]\n\n[bar]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\">foo</a></p>\n');
//test(md('[Толпой][Толпой] is a Russian word.\n\n[ТОЛПОЙ]: /url\n'),'<p><a href=\"/url\">Толпой</a> is a Russian word.</p>\n');
//test(md('[Foo\n  bar]: /url\n\n[Baz][Foo bar]\n'),'<p><a href=\"/url\">Baz</a></p>\n');
//test(md('[foo] [bar]\n\n[bar]: /url \"title\"\n'),'<p>[foo] <a href=\"/url\" title=\"title\">bar</a></p>\n');
//test(md('[foo]\n[bar]\n\n[bar]: /url \"title\"\n'),'<p>[foo]\n<a href=\"/url\" title=\"title\">bar</a></p>\n');
//test(md('[foo]: /url1\n\n[foo]: /url2\n\n[bar][foo]\n'),'<p><a href=\"/url1\">bar</a></p>\n');
//test(md('[bar][foo\\!]\n\n[foo!]: /url\n'),'<p>[bar][foo!]</p>\n');
//test(md('[foo][ref[]\n\n[ref[]: /uri\n'),'<p>[foo][ref[]</p>\n<p>[ref[]: /uri</p>\n');
//test(md('[foo][ref[bar]]\n\n[ref[bar]]: /uri\n'),'<p>[foo][ref[bar]]</p>\n<p>[ref[bar]]: /uri</p>\n');
test(md('[[[foo]]]\n\n[[[foo]]]: /url\n'),'<p>[[[foo]]]</p>\n<p>[[[foo]]]: /url</p>\n');
//test(md('[foo][ref\\[]\n\n[ref\\[]: /uri\n'),'<p><a href=\"/uri\">foo</a></p>\n');
//test(md('[bar\\\\]: /uri\n\n[bar\\\\]\n'),'<p><a href=\"/uri\">bar\\</a></p>\n');
test(md('[]\n\n[]: /uri\n'),'<p>[]</p>\n<p>[]: /uri</p>\n');
//test(md('[\n ]\n\n[\n ]: /uri\n'),'<p>[\n]</p>\n<p>[\n]: /uri</p>\n');
//test(md('[foo][]\n\n[foo]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\">foo</a></p>\n');
//test(md('[*foo* bar][]\n\n[*foo* bar]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\"><em>foo</em> bar</a></p>\n');
//test(md('[Foo][]\n\n[foo]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\">Foo</a></p>\n');
//test(md('[foo] \n[]\n\n[foo]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\">foo</a>\n[]</p>\n');
//test(md('[foo]\n\n[foo]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\">foo</a></p>\n');
//test(md('[*foo* bar]\n\n[*foo* bar]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\"><em>foo</em> bar</a></p>\n');
//test(md('[[*foo* bar]]\n\n[*foo* bar]: /url \"title\"\n'),'<p>[<a href=\"/url\" title=\"title\"><em>foo</em> bar</a>]</p>\n');
//test(md('[[bar [foo]\n\n[foo]: /url\n'),'<p>[[bar <a href=\"/url\">foo</a></p>\n');
//test(md('[Foo]\n\n[foo]: /url \"title\"\n'),'<p><a href=\"/url\" title=\"title\">Foo</a></p>\n');
//test(md('[foo] bar\n\n[foo]: /url\n'),'<p><a href=\"/url\">foo</a> bar</p>\n');
//test(md('\\[foo]\n\n[foo]: /url \"title\"\n'),'<p>[foo]</p>\n');
//test(md('[foo*]: /url\n\n*[foo*]\n'),'<p>*<a href=\"/url\">foo*</a></p>\n');
//test(md('[foo][bar]\n\n[foo]: /url1\n[bar]: /url2\n'),'<p><a href=\"/url2\">foo</a></p>\n');
//test(md('[foo][]\n\n[foo]: /url1\n'),'<p><a href=\"/url1\">foo</a></p>\n');
//test(md('[foo]()\n\n[foo]: /url1\n'),'<p><a href=\"\">foo</a></p>\n');
//test(md('[foo](not a link)\n\n[foo]: /url1\n'),'<p><a href=\"/url1\">foo</a>(not a link)</p>\n');
//test(md('[foo][bar][baz]\n\n[baz]: /url\n'),'<p>[foo]<a href=\"/url\">bar</a></p>\n');
//test(md('[foo][bar][baz]\n\n[baz]: /url1\n[bar]: /url2\n'),'<p><a href=\"/url2\">foo</a><a href=\"/url1\">baz</a></p>\n');
//test(md('[foo][bar][baz]\n\n[baz]: /url1\n[foo]: /url2\n'),'<p>[foo]<a href=\"/url1\">bar</a></p>\n');
//test(md('![foo](/url \"title\")\n'),'<p><img src=\"/url\" alt=\"foo\" title=\"title\" /></p>\n');
//test(md('![foo *bar*]\n\n[foo *bar*]: train.jpg \"train & tracks\"\n'),'<p><img src=\"train.jpg\" alt=\"foo bar\" title=\"train &amp; tracks\" /></p>\n');
//test(md('![foo ![bar](/url)](/url2)\n'),'<p><img src=\"/url2\" alt=\"foo bar\" /></p>\n');
//test(md('![foo [bar](/url)](/url2)\n'),'<p><img src=\"/url2\" alt=\"foo bar\" /></p>\n');
//test(md('![foo *bar*][]\n\n[foo *bar*]: train.jpg \"train & tracks\"\n'),'<p><img src=\"train.jpg\" alt=\"foo bar\" title=\"train &amp; tracks\" /></p>\n');
//test(md('![foo *bar*][foobar]\n\n[FOOBAR]: train.jpg \"train & tracks\"\n'),'<p><img src=\"train.jpg\" alt=\"foo bar\" title=\"train &amp; tracks\" /></p>\n');
//test(md('![foo](train.jpg)\n'),'<p><img src=\"train.jpg\" alt=\"foo\" /></p>\n');
//test(md('My ![foo bar](/path/to/train.jpg  \"title\"   )\n'),'<p>My <img src=\"/path/to/train.jpg\" alt=\"foo bar\" title=\"title\" /></p>\n');
//test(md('![foo](<url>)\n'),'<p><img src=\"url\" alt=\"foo\" /></p>\n');
//test(md('![](/url)\n'),'<p><img src=\"/url\" alt=\"\" /></p>\n');
//test(md('![foo][bar]\n\n[bar]: /url\n'),'<p><img src=\"/url\" alt=\"foo\" /></p>\n');
//test(md('![foo][bar]\n\n[BAR]: /url\n'),'<p><img src=\"/url\" alt=\"foo\" /></p>\n');
//test(md('![foo][]\n\n[foo]: /url \"title\"\n'),'<p><img src=\"/url\" alt=\"foo\" title=\"title\" /></p>\n');
//test(md('![*foo* bar][]\n\n[*foo* bar]: /url \"title\"\n'),'<p><img src=\"/url\" alt=\"foo bar\" title=\"title\" /></p>\n');
//test(md('![Foo][]\n\n[foo]: /url \"title\"\n'),'<p><img src=\"/url\" alt=\"Foo\" title=\"title\" /></p>\n');
//test(md('![foo] \n[]\n\n[foo]: /url \"title\"\n'),'<p><img src=\"/url\" alt=\"foo\" title=\"title\" />\n[]</p>\n');
//test(md('![foo]\n\n[foo]: /url \"title\"\n'),'<p><img src=\"/url\" alt=\"foo\" title=\"title\" /></p>\n');
//test(md('![*foo* bar]\n\n[*foo* bar]: /url \"title\"\n'),'<p><img src=\"/url\" alt=\"foo bar\" title=\"title\" /></p>\n');
//test(md('![[foo]]\n\n[[foo]]: /url \"title\"\n'),'<p>![[foo]]</p>\n<p>[[foo]]: /url &quot;title&quot;</p>\n');
//test(md('![Foo]\n\n[foo]: /url \"title\"\n'),'<p><img src=\"/url\" alt=\"Foo\" title=\"title\" /></p>\n');
//test(md('!\\[foo]\n\n[foo]: /url \"title\"\n'),'<p>![foo]</p>\n');
//test(md('\\![foo]\n\n[foo]: /url \"title\"\n'),'<p>!<a href=\"/url\" title=\"title\">foo</a></p>\n');
//test(md('<http://foo.bar.baz>\n'),'<p><a href=\"http://foo.bar.baz\">http://foo.bar.baz</a></p>\n');
//test(md('<http://foo.bar.baz/test?q=hello&id=22&boolean>\n'),'<p><a href=\"http://foo.bar.baz/test?q=hello&amp;id=22&amp;boolean\">http://foo.bar.baz/test?q=hello&amp;id=22&amp;boolean</a></p>\n');
//test(md('<irc://foo.bar:2233/baz>\n'),'<p><a href=\"irc://foo.bar:2233/baz\">irc://foo.bar:2233/baz</a></p>\n');
//test(md('<MAILTO:FOO@BAR.BAZ>\n'),'<p><a href=\"MAILTO:FOO@BAR.BAZ\">MAILTO:FOO@BAR.BAZ</a></p>\n');
//test(md('<a+b+c:d>\n'),'<p><a href=\"a+b+c:d\">a+b+c:d</a></p>\n');
//test(md('<made-up-scheme://foo,bar>\n'),'<p><a href=\"made-up-scheme://foo,bar\">made-up-scheme://foo,bar</a></p>\n');
//test(md('<http://../>\n'),'<p><a href=\"http://../\">http://../</a></p>\n');
//test(md('<localhost:5001/foo>\n'),'<p><a href=\"localhost:5001/foo\">localhost:5001/foo</a></p>\n');
//test(md('<http://foo.bar/baz bim>\n'),'<p>&lt;http://foo.bar/baz bim&gt;</p>\n');
//test(md('<http://example.com/\\[\\>\n'),'<p><a href=\"http://example.com/%5C%5B%5C\">http://example.com/\\[\\</a></p>\n');
//test(md('<foo@bar.example.com>\n'),'<p><a href=\"mailto:foo@bar.example.com\">foo@bar.example.com</a></p>\n');
//test(md('<foo+special@Bar.baz-bar0.com>\n'),'<p><a href=\"mailto:foo+special@Bar.baz-bar0.com\">foo+special@Bar.baz-bar0.com</a></p>\n');
//test(md('<foo\\+@bar.example.com>\n'),'<p>&lt;foo+@bar.example.com&gt;</p>\n');
//test(md('<>\n'),'<p>&lt;&gt;</p>\n');
//test(md('< http://foo.bar >\n'),'<p>&lt; http://foo.bar &gt;</p>\n');
//test(md('<m:abc>\n'),'<p>&lt;m:abc&gt;</p>\n');
//test(md('<foo.bar.baz>\n'),'<p>&lt;foo.bar.baz&gt;</p>\n');
test(md('http://example.com\n'),'<p>http://example.com</p>\n');
test(md('foo@bar.example.com\n'),'<p>foo@bar.example.com</p>\n');
test(md('<a><bab><c2c>\n'),'<p><a><bab><c2c></p>\n');
test(md('<a/><b2/>\n'),'<p><a/><b2/></p>\n');
//test(md('<a  /><b2\ndata=\"foo\" >\n'),'<p><a  /><b2\ndata=\"foo\" ></p>\n');
//test(md("<a foo=\"bar\" bam = 'baz <em>\"</em>'\n_boolean zoop:33=zoop:33 />\n"),"<p><a foo=\"bar\" bam = 'baz <em>\"</em>'\n_boolean zoop:33=zoop:33 /></p>\n");
test(md('Foo <responsive-image src=\"foo.jpg\" />\n'),'<p>Foo <responsive-image src=\"foo.jpg\" /></p>\n');
//test(md('<33> <__>\n'),'<p>&lt;33&gt; &lt;__&gt;</p>\n');
//test(md('<a h*#ref=\"hi\">\n'),'<p>&lt;a h*#ref=&quot;hi&quot;&gt;</p>\n');
//test(md("<a href=\"hi'> <a href=hi'>\n"),"<p>&lt;a href=&quot;hi'&gt; &lt;a href=hi'&gt;</p>\n");
//test(md('< a><\nfoo><bar/ >\n<foo bar=baz\nbim!bop />\n'),'<p>&lt; a&gt;&lt;\nfoo&gt;&lt;bar/ &gt;\n&lt;foo bar=baz\nbim!bop /&gt;</p>\n');
//test(md("<a href='bar'title=title>\n"),"<p>&lt;a href='bar'title=title&gt;</p>\n");
test(md('</a></foo >\n'),'<p></a></foo ></p>\n');
//test(md('</a href=\"foo\">\n'),'<p>&lt;/a href=&quot;foo&quot;&gt;</p>\n');
//test(md('foo <!-- this is a\ncomment - with hyphen -->\n'),'<p>foo <!-- this is a\ncomment - with hyphen --></p>\n');
//test(md('foo <!-- not a comment -- two hyphens -->\n'),'<p>foo &lt;!-- not a comment -- two hyphens --&gt;</p>\n');
//test(md('foo <!--> foo -->\n\nfoo <!-- foo--->\n'),'<p>foo &lt;!--&gt; foo --&gt;</p>\n<p>foo &lt;!-- foo---&gt;</p>\n');
test(md('foo <?php echo $a; ?>\n'),'<p>foo <?php echo $a; ?></p>\n');
test(md('foo <!ELEMENT br EMPTY>\n'),'<p>foo <!ELEMENT br EMPTY></p>\n');
test(md('foo <![CDATA[>&<]]>\n'),'<p>foo <![CDATA[>&<]]></p>\n');
test(md('foo <a href=\"&ouml;\">\n'),'<p>foo <a href=\"&ouml;\"></p>\n');
test(md('foo <a href=\"\\*\">\n'),'<p>foo <a href=\"\\*\"></p>\n');
//test(md('<a href=\"\\\"\">\n'),'<p>&lt;a href=&quot;&quot;&quot;&gt;</p>\n');
//test(md('foo  \nbaz\n'),'<p>foo<br />\nbaz</p>\n');
//test(md('foo\\\nbaz\n'),'<p>foo<br />\nbaz</p>\n');
//test(md('foo       \nbaz\n'),'<p>foo<br />\nbaz</p>\n');
//test(md('foo  \n     bar\n'),'<p>foo<br />\nbar</p>\n');
//test(md('foo\\\n     bar\n'),'<p>foo<br />\nbar</p>\n');
//test(md('*foo  \nbar*\n'),'<p><em>foo<br />\nbar</em></p>\n');
//test(md('*foo\\\nbar*\n'),'<p><em>foo<br />\nbar</em></p>\n');
//test(md('`code \nspan`\n'),'<p><code>code  span</code></p>\n');
//test(md('`code\\\nspan`\n'),'<p><code>code\\ span</code></p>\n');
//test(md('<a href=\"foo  \nbar\">\n'),'<p><a href=\"foo  \nbar\"></p>\n');
//test(md('<a href=\"foo\\\nbar\">\n'),'<p><a href=\"foo\\\nbar\"></p>\n');
test(md('foo\\\n'),'<p>foo\\</p>\n');
//test(md('foo  \n'),'<p>foo</p>\n');
test(md('### foo\\\n'),'<h3>foo\\</h3>\n');
//test(md('### foo  \n'),'<h3>foo</h3>\n');
//test(md('foo\nbaz\n'),'<p>foo\nbaz</p>\n');
//test(md('foo \n baz\n'),'<p>foo\nbaz</p>\n');
test(md("hello $.;'there\n"),"<p>hello $.;'there</p>\n");
test(md('Foo χρῆν\n'),'<p>Foo χρῆν</p>\n');
test(md('Multiple     spaces\n'),'<p>Multiple     spaces</p>\n');

console.log('========================');
// GFM-related unit tests
// ref: https://github.github.com/gfm/

// [0] line
test(md('abc\n'),'<p>abc</p>\n');
test(md('abc\r'),'<p>abc</p>\n');

// [0] empty line
test(md('\n'),'\n');
test(md(' \n'),'\n');
test(md('  \n'),'\n');
test(md('\t\n'),'\n');
test(md('\t\t\n'),'\n');
test(md(' \t \n'),'\n');
test(md('\t \t\n'),'\n');

test(md('\tfoo\tbaz\t\tbim\n'),'<pre><code>foo\tbaz\t\tbim\n</code></pre>\n'); // [1]
test(md('  \tfoo\tbaz\t\tbim\n'),'<pre><code>foo\tbaz\t\tbim\n</code></pre>\n'); // [2]
test(md('    a\ta\n    ὐ\ta\n'), '<pre><code>a\ta\nὐ\ta\n</code></pre>\n'); // [3]

//test(md('  - foo\n\n\tbar\n'),'<ul>\n<li>\n<p>foo</p>\n<p>bar</p>\n</li>\n</ul>\n'); // [4]

console.log("End test");
if(errs) console.log(`There were ${errs} errors`)
else console.log('..Success')
